@page "/readerDetails/{reader_number:int}"
@using Library2.Shared
@using Library2.Client.Services
@inject IReaderService ReaderService
@inject NavigationManager NavigationManager

<PageTitle>Reader Details</PageTitle>

@if (Reader is not null)
{
    <h3>@Reader.Name's Details</h3>
             
    <ReaderForm Reader="Reader" ButtonTitle="Update Reader" OnValidSubmit="UpdateReader" />
    
    <button class="btn btn-danger form-control mt-3" @onclick="DeleteReader">Delete Reader</button>
}
else if (!_isFound)
{
    <p>Reader with id '@Reader_number' is not found!</p>
}
else
{
    <p>Loading...</p>
}

@code {
    
    private bool _isFound = true;
    
    [Parameter]
    public int Reader_number { get; set; }

    private Reader? Reader { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        try
        {
            Reader = await ReaderService.GetReaderByIdAsync(Reader_number);
        }
        catch
        {
            _isFound = false;
        }
    }

    private async Task UpdateReader()
    {
        await ReaderService.UpdateReaderAsync(Reader_number, Reader);
        NavigationManager.NavigateTo("readerList");
    }

    private async Task DeleteReader()
    {
        await ReaderService.DeleteReaderAsync(Reader_number);
        NavigationManager.NavigateTo("readerList");
    }
}